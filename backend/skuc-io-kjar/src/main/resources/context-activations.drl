package skuc.io.rules;

import java.util.ArrayList;
import skuc.io.skuciocore.models.csm.Group;
import skuc.io.skuciocore.models.csm.configuration.Context;
import skuc.io.skuciocore.models.csm.context.activation.EventActivator;
import skuc.io.skuciocore.models.csm.context.activation.TimePeriodActivator;
import skuc.io.skuciocore.models.events.kjar.ActivateContextById;
import skuc.io.skuciocore.models.events.kjar.ActivateContextByName;
import skuc.io.skuciocore.models.events.kjar.EventOccured;
import skuc.io.skuciocore.services.ContextService;
import skuc.io.skuciocore.services.EventActivatorService;
import skuc.io.skuciocore.services.TimePeriodActivatorService;

global ContextService contextService;
global EventActivatorService eventActivatorService;
global TimePeriodActivatorService timePeriodActivatorService;


rule "Activate Context By Name"
  when
    $activateByName : ActivateContextByName()
    not Context(name == $activateByName.contextName)
    $group : Group()
  then
    Context context = contextService.getByGroupAndName($group.getId(), $activateByName.getContextName());

    insert(context);
end;

rule "Clear Context By Name"
  salience -100
  when
    $activateByName : ActivateContextByName()
  then
    delete($activateByName);
end;

rule "Activate Context By Id"
  when
    $activateById : ActivateContextById()
    not Context(id == $activateById.contextId)
    $group : Group()
  then
    Context context = contextService.get($activateById.getContextId());

    insert(context);
end;

rule "Clear Context By Id"
  salience -100
  when
    $activateById : ActivateContextById()
  then
    delete($activateById);
end;

rule "Activate Context By Event Activator"
  when
    $eventOccured : EventOccured(processedByActivator == false)
    $group : Group()
    $eventActivator : EventActivator(eventType == $eventOccured.name) from eventActivatorService.getByGroup($group.id)
  then
    modify($eventOccured) {
      setProcessedByActivator(true);
    }
    insert(new ActivateContextById($eventActivator.getContextId()));
end;

rule "Activate Context By Time Period Activator"
  timer (int: 0s 1s)
  enabled ($timePeriodActivator.matches())
when
  $group : Group()
  $timePeriodActivator : TimePeriodActivator() from timePeriodActivatorService.getByGroup($group.id)
then
  insert(new ActivateContextById($timePeriodActivator.getContextId()));
end;
