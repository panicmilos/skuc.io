package skuc.io;

import java.time.LocalDateTime;
import java.util.ArrayList;
import skuc.io.skuciocore.models.csm.Group;
import skuc.io.skuciocore.models.csm.configuration.Context;
import skuc.io.skuciocore.models.csm.context.deactivation.EventDeactivator;
import skuc.io.skuciocore.models.csm.context.deactivation.TimePeriodDeactivator;
import skuc.io.skuciocore.models.events.context.ContextDeactivated;
import skuc.io.skuciocore.models.events.kjar.DeactivateContextById;
import skuc.io.skuciocore.models.events.kjar.DeactivateContextByName;
import skuc.io.skuciocore.models.events.kjar.EventOccured;
import skuc.io.skuciocore.services.ContextService;
import skuc.io.skuciocore.services.EventDeactivatorService;
import skuc.io.skuciocore.services.TimePeriodDeactivatorService;
import skuc.io.skuciocore.services.events.ContextDeactivatedService;

global ContextService contextService;
global EventDeactivatorService eventDeactivatorService;
global TimePeriodDeactivatorService timePeriodDeactivatorService;
global ContextDeactivatedService contextDeactivatedService;


rule "Deactivate Context By Name"
  agenda-group "ContextDeactivations"
  when
    $deactivateByName : DeactivateContextByName()
    $context : Context(name == $deactivateByName.contextName)
    $location: Location()
  then
    contextDeactivatedService.create(new ContextDeactivated($context.getId(), $location.getId(), LocalDateTime.now()));
    delete($context);
end;

rule "Clear Deactivate Context By Name"
  agenda-group "ContextDeactivations"
  salience -100
  when
    $deactivateByName : DeactivateContextByName()
  then
    delete($deactivateByName);
end;

rule "Deactivate Context By Id"
  agenda-group "ContextDeactivations"
  when
    $deactivateById : DeactivateContextById()
    $context : Context(id == $deactivateById.contextId)
    $location: Location()
  then
    contextDeactivatedService.create(new ContextDeactivated($context.getId(), $location.getId(), LocalDateTime.now()));
    delete($context);
end;

rule "Clear Deactivate Context By Id"
  agenda-group "ContextDeactivations"
  salience -100
  when
    $deactivateById : DeactivateContextById()
  then
    delete($deactivateById);
end;

rule "Deactivate Context By Event Deactivator"
  agenda-group "ContextDeactivations"
  when
    $eventOccured : EventOccured(processedByActivator == false)
    $group : Group()
    $eventDeactivator : EventDeactivator(eventType == $eventOccured.name) from eventDeactivatorService.getByGroup($group.id)
  then
    modify($eventOccured) {
      setProcessedByActivator(true);
    }
    insert(new DeactivateContextById($eventDeactivator.getContextId()));
end;

rule "Deactivate Context By Time Period Deactivator"
  agenda-group "ContextDeactivations"
  timer (int: 0s 1s)
  enabled ($timePeriodDeactivator.matches())
when
  $group : Group()
  $timePeriodDeactivator : TimePeriodDeactivator() from timePeriodDeactivatorService.getByGroup($group.id)
then
  insert(new DeactivateContextById($timePeriodDeactivator.getContextId()));
end;
