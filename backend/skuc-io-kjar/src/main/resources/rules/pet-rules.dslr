paketic skuc.io;

use dispatch;
use changeStatus;
use most common imports;

rule "Pet At Home"
  priority -90
  when
    ensureContextNotActive(PetWalk)
    def $context = getAnyContextIfActive()
    def $max_homeradius = C[$context][max_homeradius]
    def $curr_pet
      - manje ili jednako sa $max_homeradius
  then
    sisaj("Pet At Home");
    removeValue($curr_pet);
    changeStatus("pet", "PetAtHome");
end;

rule "Potential Pet Home Escape"
  when
    ensureContextNotActive(PetWalk)
    PotentialPetMissing has not occured
    PotentialPetComeback has not occured
    PetMissing has not occured
    def $context = getAnyContextIfActive()
    def $max_homeradius = C[$context][max_homeradius]
    def $curr_pet
      - vece od $max_homeradius
  then
    removeValue($curr_pet);
    dispatch(InformUser);
    sisaj("PotentialPetMissing");
    dispatch(DeletePetComebackByPotentialPetMissing);
    dispatch(PotentialPetMissing);
end;

rule "Remove PotentialPetMissing"
  priority 100
  when
>   $deleteEvent: EventOccured(name == "DeletePotentialPetMissingByPetMissing" || name == "DeletePotentialPetMissingByPetComeback")
>   $ppm: EventOccured(name == "PotentialPetMissing")
  then
    sisaj("Remove all PotentialPetMissing");
>   delete($deleteEvent);
>   delete($ppm);
end;

rule "Remove PotentialPetMissing Cleanups"
  when
>   $deleteEvent: EventOccured(name == "DeletePotentialPetMissingByPetMissing" || name == "DeletePotentialPetMissingByPetComeback")
  then
>   delete($deleteEvent);
end;


rule "Change status for PotentialPetMissing"
  when
    PotentialPetMissing has occured
  then
    changeStatus("pet", "PotentialPetMissing");
end;

rule "Potential Pet Neighborhood Escape"
  when
    ensureContextNotActive(PetWalk)
    PotentialPetMissing or PotentialPetComeback have occured
    PetMissing has not occured
    def $context = getAnyContextIfActive()
    def $max_neighborhoodradius = C[$context][max_neighborhoodradius]
    def $curr_pet
      - vece od $max_neighborhoodradius
  then
    removeValue($curr_pet);
    dispatch(InformUser);
    sisaj("PetMissing");
    dispatch(DeletePotentialPetComebackByPetMissing);
    dispatch(DeletePotentialPetMissingByPetMissing);
    dispatch(PetMissing);
end;

rule "Remove PetMissing"
  priority 100
  when
>   $deleteEvent: EventOccured(name == "DeletePetMissingByPotentialPetComeback")
>   $petEvent: EventOccured(name == "PetMissing")
  then
    sisaj("Remove all PetMissing");
>   delete($deleteEvent);
>   delete($petEvent);
end;

rule "Remove PetMissing Cleanups"
  when
>   $deleteEvent: EventOccured(name == "DeletePetMissingByPotentialPetComeback")
  then
>   delete($deleteEvent);
end;

rule "Change status for PetMissing"
  when
    PetMissing has occured
  then
    changeStatus("pet", "PetMissing");
end;

rule "Pet Missing"
  when
    def $context = getContextIfActive(AFH)
    PetMissing has occured
    StartSendingRealTimeLocation has not occured
  then
    dispatch(AlarmUser);
    dispatch(StartSendingRealTimeLocation);
end;

rule "Potential Pet Neighborhood Comeback"
  when
    PetMissing has occured
    PotentialPetComeback has not occured
    def $context = getAnyContextIfActive()
    def $max_neighborhoodradius = C[$context][max_neighborhoodradius]
    def $curr_pet
      - manje ili jednako sa $max_neighborhoodradius
  then
    removeValue($curr_pet);
    dispatch(InformUser);
    sisaj("PotentialPetComeback");
    dispatch(DeletePetMissingByPotentialPetComeback);
    dispatch(PotentialPetComeback);
end;

rule "Remove PotentialPetComeback"
  priority 100
  when
>   $deleteEvent : EventOccured(name == "DeletePotentialPetComebackByPetComeback" || name == "DeletePotentialPetComebackByPetMissing")
>   $petEvent: EventOccured(name == "PotentialPetComeback")
  then
    sisaj("Remove all PotentialPetComeback");
>   delete($deleteEvent);
>   delete($petEvent);
end;

rule "Remove PotentialPetComeback Cleanups"
  when
>   $deleteEvent: EventOccured(name == "DeletePotentialPetComebackByPetComeback" || name == "DeletePotentialPetComebackByPetMissing")
  then
>   delete($deleteEvent);
end;

rule "Change status for PotentialPetComeback"
  when
    PotentialPetComeback has occured
  then
    changeStatus("pet", "PotentialPetComeback");
end;

rule "Potential Pet Home Comeback"
  when
    PotentialPetMissing or PotentialPetComeback have occured
    PetComeback has not occured
    def $context = getAnyContextIfActive()
    def $max_homeradius = C[$context][max_homeradius]
    def $curr_pet
      - manje ili jednako sa $max_homeradius
  then
    removeValue($curr_pet);
    sisaj("PetComeback");
    dispatch(InformUser);
    dispatch(DeletePotentialPetComebackByPetComeback);
    dispatch(DeletePotentialPetMissingByPetComeback);
    dispatch(PetComeback);
    dispatch(StopSendingRealTimeLocation);
end;

rule "Remove PetComeback"
  priority 100
  when
>   $deleteEvent: EventOccured(name == "DeletePetComebackByPotentialPetMissing")
>   $petEvent: EventOccured(name == "PetComeback")
  then
  sisaj("Remove all PetComeback");
>   delete($deleteEvent);
>   delete($petEvent);
end;

rule "Remove PetComeback Cleanups"
  when
>   $deleteEvent: EventOccured(name == "DeletePetComebackByPotentialPetMissing")
  then
>   delete($deleteEvent);
end;

rule "Change status for PetComeback"
  when
    PetComeback has occured
  then
    changeStatus("pet", "PetComeback");
end;

rule "Remove Curr Pet"
  priority -100
  when
    def $curr_pet
  then
    removeValue($curr_pet);
end;